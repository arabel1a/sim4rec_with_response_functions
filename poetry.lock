[[package]]
name = "alabaster"
version = "0.7.12"
description = "A configurable sidebar-enabled Sphinx theme"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "alembic"
version = "1.8.1"
description = "A database migration tool for SQLAlchemy."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.9\""}
importlib-resources = {version = "*", markers = "python_version < \"3.9\""}
Mako = "*"
SQLAlchemy = ">=1.3.0"

[package.extras]
tz = ["python-dateutil"]

[[package]]
name = "anyio"
version = "3.6.2"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"

[package.extras]
doc = ["packaging", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["coverage[toml] (>=4.5)", "hypothesis (>=4.0)", "pytest (>=7.0)", "pytest-mock (>=3.6.1)", "trustme", "contextlib2", "uvloop (<0.15)", "mock (>=4)", "uvloop (>=0.15)"]
trio = ["trio (>=0.16,<0.22)"]

[[package]]
name = "appnope"
version = "0.1.3"
description = "Disable App Nap on macOS >= 10.9"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "argon2-cffi"
version = "21.3.0"
description = "The secure Argon2 password hashing algorithm."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
argon2-cffi-bindings = "*"

[package.extras]
dev = ["pre-commit", "cogapp", "tomli", "coverage[toml] (>=5.0.2)", "hypothesis", "pytest", "sphinx", "sphinx-notfound-page", "furo"]
docs = ["sphinx", "sphinx-notfound-page", "furo"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pytest"]

[[package]]
name = "argon2-cffi-bindings"
version = "21.2.0"
description = "Low-level CFFI bindings for Argon2"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.0.1"

[package.extras]
dev = ["pytest", "cogapp", "pre-commit", "wheel"]
tests = ["pytest"]

[[package]]
name = "asttokens"
version = "2.2.0"
description = "Annotate AST trees with source code positions"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
test = ["astroid", "pytest"]

[[package]]
name = "attrs"
version = "22.1.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit", "cloudpickle"]
docs = ["furo", "sphinx", "zope.interface", "sphinx-notfound-page"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "cloudpickle"]
tests_no_zope = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "cloudpickle"]

[[package]]
name = "autopage"
version = "0.5.1"
description = "A library to provide automatic paging for console output"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "autowoe"
version = "1.3.2"
description = "Library for automatic interpretable model building (Whitebox AutoML)"
category = "main"
optional = false
python-versions = ">=3.6.1,<4.0.0"

[package.dependencies]
jinja2 = "*"
joblib = "*"
lightgbm = "*"
matplotlib = "*"
numpy = "*"
pandas = "*"
pytest = "*"
pytz = "*"
scikit-learn = "*"
scipy = "*"
seaborn = "*"
sphinx = "*"
sphinx-rtd-theme = "*"
StrEnum = ">=0.4.7,<0.5.0"
tqdm = ">=4.62.3,<5.0.0"

[[package]]
name = "babel"
version = "2.11.0"
description = "Internationalization utilities"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pytz = ">=2015.7"

[[package]]
name = "backcall"
version = "0.2.0"
description = "Specifications for callback functions passed in to an API"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "beautifulsoup4"
version = "4.11.1"
description = "Screen-scraping library"
category = "dev"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "bleach"
version = "5.0.1"
description = "An easy safelist-based HTML-sanitizing tool."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
six = ">=1.9.0"
webencodings = "*"

[package.extras]
css = ["tinycss2 (>=1.1.0,<1.2)"]
dev = ["build (==0.8.0)", "flake8 (==4.0.1)", "hashin (==0.17.0)", "pip-tools (==6.6.2)", "pytest (==7.1.2)", "Sphinx (==4.3.2)", "tox (==3.25.0)", "twine (==4.0.1)", "wheel (==0.37.1)", "black (==22.3.0)", "mypy (==0.961)"]

[[package]]
name = "catboost"
version = "1.1.1"
description = "Catboost Python Package"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
graphviz = "*"
matplotlib = "*"
numpy = ">=1.16.0"
pandas = ">=0.24.0"
plotly = "*"
scipy = "*"
six = "*"

[[package]]
name = "certifi"
version = "2022.9.24"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.1"
description = "Foreign Function Interface for Python calling C code."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "2.1.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "cliff"
version = "4.1.0"
description = "Command Line Interface Formulation Framework"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
autopage = ">=0.4.0"
cmd2 = ">=1.0.0"
importlib-metadata = ">=4.4"
PrettyTable = ">=0.7.2"
PyYAML = ">=3.12"
stevedore = ">=2.0.1"

[[package]]
name = "cmaes"
version = "0.9.0"
description = "Lightweight Covariance Matrix Adaptation Evolution Strategy (CMA-ES) implementation for Python 3."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = "*"

[package.extras]
cmawm = ["scipy"]

[[package]]
name = "cmd2"
version = "2.4.2"
description = "cmd2 - quickly build feature-rich and user-friendly interactive command line applications in Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
attrs = ">=16.3.0"
pyperclip = ">=1.6"
pyreadline3 = {version = "*", markers = "sys_platform == \"win32\""}
wcwidth = ">=0.1.7"

[package.extras]
dev = ["codecov", "doc8", "flake8", "invoke", "mypy (==0.902)", "nox", "pytest (>=4.6)", "pytest-cov", "pytest-mock", "sphinx", "sphinx-rtd-theme", "sphinx-autobuild", "twine (>=1.11)"]
test = ["codecov", "coverage", "pytest (>=4.6)", "pytest-cov", "pytest-mock", "gnureadline"]
validate = ["flake8", "mypy (==0.902)", "types-pkg-resources"]

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "colorlog"
version = "6.7.0"
description = "Add colours to the output of Python's logging module."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}

[package.extras]
development = ["black", "flake8", "mypy", "pytest", "types-colorama"]

[[package]]
name = "comm"
version = "0.1.1"
description = "Jupyter Python Comm implementation, for usage in ipykernel, xeus-python etc."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
traitlets = ">5.3"

[package.extras]
test = ["pytest"]

[[package]]
name = "contourpy"
version = "1.0.6"
description = "Python library for calculating contours of 2D quadrilateral grids"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.16"

[package.extras]
bokeh = ["bokeh", "selenium"]
docs = ["docutils (<0.18)", "sphinx (<=5.2.0)", "sphinx-rtd-theme"]
test = ["pytest", "matplotlib", "pillow", "flake8", "isort"]
test-minimal = ["pytest"]
test-no-codebase = ["pytest", "matplotlib", "pillow"]

[[package]]
name = "convertdate"
version = "2.4.0"
description = "Converts between Gregorian dates and other calendar systems"
category = "main"
optional = false
python-versions = "<4,>=3.7"

[package.dependencies]
pymeeus = ">=0.3.13,<=1"

[package.extras]
dev = ["build", "black", "isort", "pylint"]
docs = ["sphinx", "sphinx-rtd-theme", "myst-parser"]
tests = ["coverage"]

[[package]]
name = "copulas"
version = "0.7.0"
description = "A python library for building different types of copulas and using them for sampling."
category = "main"
optional = false
python-versions = ">=3.6,<3.10"

[package.dependencies]
matplotlib = {version = ">=3.4.0,<4", markers = "python_version >= \"3.7\""}
numpy = {version = ">=1.20.0,<2", markers = "python_version >= \"3.7\""}
pandas = ">=1.1.3,<2"
scipy = ">=1.5.4,<2"

[package.extras]
tutorials = ["jupyter (>=1.0.0,<2)", "scikit-learn (>=0.24,<2)"]
test = ["jupyter (>=1.0.0,<2)", "scikit-learn (>=0.24,<2)", "rundoc (>=0.4.3,<0.5)", "pytest-rerunfailures (>=9.0.0,<10)", "pytest-cov (>=2.6.0,<3)", "pytest (>=3.4.2,<6)"]
dev = ["jupyter (>=1.0.0,<2)", "scikit-learn (>=0.24,<2)", "docutils (>=0.10,<0.15)", "boto3 (>=1.7.47,<1.10)", "tabulate (>=0.8.3,<0.9)", "urllib3 (>=1.20,<1.26)", "doc8 (>=0.8.0,<0.9)", "invoke", "tox (>=2.9.1,<4)", "coverage (>=4.5.1,<6)", "wheel (>=0.30.0)", "twine (>=1.10.0,<4)", "autopep8 (>=1.4.3,<1.6)", "autoflake (>=1.1,<2)", "flake8-absolute-import (>=1.0,<2)", "flake8-sfs (>=0.0.3,<0.1)", "flake8-variables-names (>=0.0.4,<0.1)", "flake8-quotes (>=3.3.0,<4)", "flake8-eradicate (>=1.1.0,<1.2)", "flake8-builtins (>=1.5.3,<1.6)", "pandas-vet (>=0.2.2,<0.3)", "flake8-multiline-containers (>=0.0.18,<0.1)", "flake8-expression-complexity (>=0.0.9,<0.1)", "flake8-print (>=4.0.0,<4.1)", "flake8-comprehensions (>=3.6.1,<3.7)", "flake8-pytest-style (>=1.5.0,<2)", "pydocstyle (>=6.1.1,<6.2)", "flake8-docstrings (>=1.5.0,<2)", "dlint (>=0.11.0,<0.12)", "pep8-naming (>=0.12.1,<0.13)", "flake8-fixme (>=1.1.1,<1.2)", "flake8-mutable (>=1.2.0,<1.3)", "flake8-mock (>=0.3,<0.4)", "flake8-debugger (>=4.0.0,<4.1)", "isort (>=4.3.4,<5)", "flake8 (>=3.7.7,<4)", "Jinja2 (>=2,<3)", "sphinx-rtd-theme (>=0.2.4,<0.5)", "Sphinx (>=1.7.1,<3)", "nbsphinx (>=0.5.0,<0.7)", "m2r (>=0.2.0,<0.3)", "watchdog (>=0.8.3,<0.11)", "bumpversion (>=0.5.3,<0.6)", "pip (>=9.0.1)", "rundoc (>=0.4.3,<0.5)", "pytest-rerunfailures (>=9.0.0,<10)", "pytest-cov (>=2.6.0,<3)", "pytest (>=3.4.2,<6)"]

[[package]]
name = "ctgan"
version = "0.5.1"
description = "Conditional GAN for Tabular Data"
category = "main"
optional = false
python-versions = ">=3.6,<3.10"

[package.dependencies]
numpy = {version = ">=1.20.0,<2", markers = "python_version >= \"3.7\""}
packaging = ">=20,<22"
pandas = ">=1.1.3,<2"
rdt = ">=0.6.2,<0.7"
scikit-learn = ">=0.24,<2"
torch = ">=1.8.0,<2"
torchvision = ">=0.9.0,<1"

[package.extras]
test = ["pytest-cov (>=2.6.0)", "pytest-rerunfailures (>=9.1.1,<10)", "pytest (>=3.4.2)"]
dev = ["pytest-cov (>=2.6.0)", "pytest-rerunfailures (>=9.1.1,<10)", "pytest (>=3.4.2)", "invoke", "tox (>=2.9.1,<4)", "coverage (>=4.5.1,<6)", "wheel (>=0.30.0)", "twine (>=1.10.0,<4)", "autopep8 (>=1.4.3,<1.6)", "autoflake (>=1.1,<2)", "flake8-pytest-style (>=1.5.0,<2)", "flake8-sfs (>=0.0.3,<0.1)", "flake8-docstrings (>=1.5.0,<2)", "flake8-comprehensions (>=3.6.1,<3.7)", "pandas-vet (>=0.2.2,<0.3)", "flake8-variables-names (>=0.0.4,<0.1)", "flake8-builtins (>=1.5.3,<1.6)", "flake8-eradicate (>=1.1.0,<1.2)", "flake8-expression-complexity (>=0.0.9,<0.1)", "flake8-fixme (>=1.1.1,<1.2)", "flake8-quotes (>=3.3.0,<4)", "flake8-print (>=4.0.0,<4.1)", "flake8-multiline-containers (>=0.0.18,<0.1)", "flake8-absolute-import (>=1.0,<2)", "flake8-mutable (>=1.2.0,<1.3)", "flake8-mock (>=0.3,<0.4)", "flake8-debugger (>=4.0.0,<4.1)", "dlint (>=0.11.0,<0.12)", "isort (>=4.3.4,<5)", "flake8 (>=3.7.7,<4)", "watchdog (>=0.8.3,<0.11)", "bumpversion (>=0.5.3,<0.6)", "pip (>=9.0.1)"]

[[package]]
name = "cycler"
version = "0.11.0"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "dataclasses"
version = "0.6"
description = "A backport of the dataclasses module for Python 3.6"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "debugpy"
version = "1.6.4"
description = "An implementation of the Debug Adapter Protocol for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "deepecho"
version = "0.3.0.post1"
description = "Mixed-type multivariate time series modeling with generative adversarial networks."
category = "main"
optional = false
python-versions = ">=3.6,<3.10"

[package.dependencies]
numpy = {version = ">=1.20.0,<2", markers = "python_version >= \"3.7\""}
pandas = ">=1.1.3,<2"
torch = ">=1.8.0,<2"
tqdm = ">=4.15,<5"

[package.extras]
dev = ["autoflake (>=1.1,<2)", "autopep8 (>=1.4.3,<1.6)", "bumpversion (>=0.5.3,<0.6)", "coverage (>=4.5.1,<6)", "flake8-absolute-import (>=1.0,<2)", "flake8-docstrings (>=1.5.0,<2)", "flake8-sfs (>=0.0.3,<0.1)", "flake8 (>=3.7.7,<4)", "invoke", "isort (>=4.3.4,<5)", "jupyter (>=1.0.0,<2)", "pip (>=9.0.1)", "pylint (>=2.5.3,<3)", "pytest-cov (>=2.6.0)", "pytest-rerunfailures (>=9.0.0,<10)", "pytest (>=3.4.2)", "rundoc (>=0.4.3,<0.5)", "setuptools (<49.2)", "tox (>=2.9.1,<4)", "twine (>=1.10.0,<4)", "watchdog (>=0.8.3,<0.11)", "wheel (>=0.30.0)"]
test = ["jupyter (>=1.0.0,<2)", "pytest-cov (>=2.6.0)", "pytest-rerunfailures (>=9.0.0,<10)", "pytest (>=3.4.2)", "rundoc (>=0.4.3,<0.5)"]

[[package]]
name = "defusedxml"
version = "0.7.1"
description = "XML bomb protection for Python stdlib modules"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "docutils"
version = "0.17.1"
description = "Docutils -- Python Documentation Utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "entrypoints"
version = "0.4"
description = "Discover and load entry points from installed packages."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "exceptiongroup"
version = "1.0.4"
description = "Backport of PEP 654 (exception groups)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "executing"
version = "1.2.0"
description = "Get the currently executing AST node of a frame, and other information"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
tests = ["asttokens", "pytest", "littleutils", "rich"]

[[package]]
name = "faker"
version = "9.9.1"
description = "Faker is a Python package that generates fake data for you."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
python-dateutil = ">=2.4"
text-unidecode = "1.3"

[[package]]
name = "fastjsonschema"
version = "2.16.2"
description = "Fastest Python implementation of JSON schema"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
devel = ["colorama", "jsonschema", "json-spec", "pylint", "pytest", "pytest-benchmark", "pytest-cache", "validictory"]

[[package]]
name = "fonttools"
version = "4.38.0"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
all = ["fs (>=2.2.0,<3)", "lxml (>=4.0,<5)", "zopfli (>=0.1.4)", "lz4 (>=1.7.4.2)", "matplotlib", "sympy", "skia-pathops (>=0.5.0)", "uharfbuzz (>=0.23.0)", "brotlicffi (>=0.8.0)", "scipy", "brotli (>=1.0.1)", "munkres", "unicodedata2 (>=14.0.0)", "xattr"]
graphite = ["lz4 (>=1.7.4.2)"]
interpolatable = ["scipy", "munkres"]
lxml = ["lxml (>=4.0,<5)"]
pathops = ["skia-pathops (>=0.5.0)"]
plot = ["matplotlib"]
repacker = ["uharfbuzz (>=0.23.0)"]
symfont = ["sympy"]
type1 = ["xattr"]
ufo = ["fs (>=2.2.0,<3)"]
unicode = ["unicodedata2 (>=14.0.0)"]
woff = ["zopfli (>=0.1.4)", "brotlicffi (>=0.8.0)", "brotli (>=1.0.1)"]

[[package]]
name = "graphviz"
version = "0.20.1"
description = "Simple Python interface for Graphviz"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["tox (>=3)", "flake8", "pep8-naming", "wheel", "twine"]
docs = ["sphinx (>=5)", "sphinx-autodoc-typehints", "sphinx-rtd-theme"]
test = ["pytest (>=7)", "pytest-mock (>=3)", "mock (>=4)", "pytest-cov", "coverage"]

[[package]]
name = "greenlet"
version = "2.0.1"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*"

[package.extras]
docs = ["sphinx", "docutils (<0.18)"]
test = ["objgraph", "psutil", "faulthandler"]

[[package]]
name = "hijri-converter"
version = "2.2.4"
description = "Accurate Hijri-Gregorian dates converter based on the Umm al-Qura calendar"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "holidays"
version = "0.17.2"
description = "Generate and work with holidays in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
convertdate = ">=2.3.0"
hijri-converter = "*"
korean-lunar-calendar = "*"
python-dateutil = "*"

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imagesize"
version = "1.4.1"
description = "Getting image size from png/jpeg/jpeg2000/gif file"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "implicit"
version = "0.6.1"
description = "Collaborative Filtering for Implicit Feedback Datasets"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
scipy = ">=0.16"
tqdm = ">=4.27"

[[package]]
name = "importlib-metadata"
version = "5.1.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "pytest-flake8", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "5.10.0"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "ipykernel"
version = "6.18.2"
description = "IPython Kernel for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
appnope = {version = "*", markers = "platform_system == \"Darwin\""}
comm = ">=0.1"
debugpy = ">=1.0"
ipython = ">=7.23.1"
jupyter-client = ">=6.1.12"
matplotlib-inline = ">=0.1"
nest-asyncio = "*"
packaging = "*"
psutil = "*"
pyzmq = ">=17"
tornado = ">=6.1"
traitlets = ">=5.1.0"

[package.extras]
cov = ["coverage", "curio", "matplotlib", "pytest-cov", "trio"]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx", "sphinxcontrib-github-alt"]
test = ["flaky", "ipyparallel", "pre-commit", "pytest-asyncio", "pytest-cov", "pytest-timeout", "pytest (>=7.0)"]

[[package]]
name = "ipython"
version = "8.7.0"
description = "IPython: Productive Interactive Computing"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
appnope = {version = "*", markers = "sys_platform == \"darwin\""}
backcall = "*"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
decorator = "*"
jedi = ">=0.16"
matplotlib-inline = "*"
pexpect = {version = ">4.3", markers = "sys_platform != \"win32\""}
pickleshare = "*"
prompt-toolkit = ">=3.0.11,<3.1.0"
pygments = ">=2.4.0"
stack-data = "*"
traitlets = ">=5"

[package.extras]
all = ["black", "ipykernel", "setuptools (>=18.5)", "sphinx (>=1.3)", "sphinx-rtd-theme", "docrepr", "matplotlib", "stack-data", "pytest (<7)", "typing-extensions", "pytest (<7.1)", "pytest-asyncio", "testpath", "nbconvert", "nbformat", "ipywidgets", "notebook", "ipyparallel", "qtconsole", "curio", "matplotlib (!=3.2.0)", "numpy (>=1.20)", "pandas", "trio"]
black = ["black"]
doc = ["ipykernel", "setuptools (>=18.5)", "sphinx (>=1.3)", "sphinx-rtd-theme", "docrepr", "matplotlib", "stack-data", "pytest (<7)", "typing-extensions", "pytest (<7.1)", "pytest-asyncio", "testpath"]
kernel = ["ipykernel"]
nbconvert = ["nbconvert"]
nbformat = ["nbformat"]
notebook = ["ipywidgets", "notebook"]
parallel = ["ipyparallel"]
qtconsole = ["qtconsole"]
test = ["pytest (<7.1)", "pytest-asyncio", "testpath"]
test_extra = ["pytest (<7.1)", "pytest-asyncio", "testpath", "curio", "matplotlib (!=3.2.0)", "nbformat", "numpy (>=1.20)", "pandas", "trio"]

[[package]]
name = "ipython-genutils"
version = "0.2.0"
description = "Vestigial utilities from IPython"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "ipywidgets"
version = "8.0.2"
description = "Jupyter interactive widgets"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ipykernel = ">=4.5.1"
ipython = ">=6.1.0"
jupyterlab-widgets = ">=3.0,<4.0"
traitlets = ">=4.3.1"
widgetsnbextension = ">=4.0,<5.0"

[package.extras]
test = ["jsonschema", "pytest (>=3.6.0)", "pytest-cov", "pytz"]

[[package]]
name = "jedi"
version = "0.18.2"
description = "An autocompletion tool for Python that can be used for text editors."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.0,<0.9.0"

[package.extras]
docs = ["Jinja2 (==2.11.3)", "MarkupSafe (==1.1.1)", "Pygments (==2.8.1)", "alabaster (==0.7.12)", "babel (==2.9.1)", "chardet (==4.0.0)", "commonmark (==0.8.1)", "docutils (==0.17.1)", "future (==0.18.2)", "idna (==2.10)", "imagesize (==1.2.0)", "mock (==1.0.1)", "packaging (==20.9)", "pyparsing (==2.4.7)", "pytz (==2021.1)", "readthedocs-sphinx-ext (==2.1.4)", "recommonmark (==0.5.0)", "requests (==2.25.1)", "six (==1.15.0)", "snowballstemmer (==2.1.0)", "sphinx-rtd-theme (==0.4.3)", "sphinx (==1.8.5)", "sphinxcontrib-serializinghtml (==1.1.4)", "sphinxcontrib-websupport (==1.2.4)", "urllib3 (==1.26.4)"]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["Django (<3.1)", "attrs", "colorama", "docopt", "pytest (<7.0.0)"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "joblib"
version = "1.2.0"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "json2html"
version = "1.3.0"
description = "JSON to HTML Table Representation"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "json5"
version = "0.9.10"
description = "A Python implementation of the JSON5 data format."
category = "dev"
optional = false
python-versions = "*"

[package.extras]
dev = ["hypothesis"]

[[package]]
name = "jsonschema"
version = "4.17.1"
description = "An implementation of JSON Schema validation for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
attrs = ">=17.4.0"
importlib-resources = {version = ">=1.4.0", markers = "python_version < \"3.9\""}
pkgutil-resolve-name = {version = ">=1.3.10", markers = "python_version < \"3.9\""}
pyrsistent = ">=0.14.0,<0.17.0 || >0.17.0,<0.17.1 || >0.17.1,<0.17.2 || >0.17.2"

[package.extras]
format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
format-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]

[[package]]
name = "jupyter"
version = "1.0.0"
description = "Jupyter metapackage. Install all the Jupyter components in one go."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ipykernel = "*"
ipywidgets = "*"
jupyter-console = "*"
nbconvert = "*"
notebook = "*"
qtconsole = "*"

[[package]]
name = "jupyter-client"
version = "7.4.7"
description = "Jupyter protocol implementation and client libraries"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
entrypoints = "*"
jupyter-core = ">=4.9.2"
nest-asyncio = ">=1.5.4"
python-dateutil = ">=2.8.2"
pyzmq = ">=23.0"
tornado = ">=6.2"
traitlets = "*"

[package.extras]
doc = ["ipykernel", "myst-parser", "sphinx-rtd-theme", "sphinx (>=1.3.6)", "sphinxcontrib-github-alt"]
test = ["codecov", "coverage", "ipykernel (>=6.12)", "ipython", "mypy", "pre-commit", "pytest", "pytest-asyncio (>=0.18)", "pytest-cov", "pytest-timeout"]

[[package]]
name = "jupyter-console"
version = "6.4.4"
description = "Jupyter terminal console"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ipykernel = "*"
ipython = "*"
jupyter-client = ">=7.0.0"
prompt-toolkit = ">=2.0.0,<3.0.0 || >3.0.0,<3.0.1 || >3.0.1,<3.1.0"
pygments = "*"

[package.extras]
test = ["pexpect"]

[[package]]
name = "jupyter-core"
version = "5.1.0"
description = "Jupyter core package. A base package on which Jupyter projects rely."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
platformdirs = ">=2.5"
pywin32 = {version = ">=1.0", markers = "sys_platform == \"win32\" and platform_python_implementation != \"PyPy\""}
traitlets = ">=5.3"

[package.extras]
docs = ["myst-parser", "sphinxcontrib-github-alt", "traitlets"]
test = ["ipykernel", "pre-commit", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "jupyter-server"
version = "1.23.3"
description = "The backend—i.e. core services, APIs, and REST endpoints—to Jupyter web applications."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
anyio = ">=3.1.0,<4"
argon2-cffi = "*"
jinja2 = "*"
jupyter-client = ">=6.1.12"
jupyter-core = ">=4.7.0"
nbconvert = ">=6.4.4"
nbformat = ">=5.2.0"
packaging = "*"
prometheus-client = "*"
pywinpty = {version = "*", markers = "os_name == \"nt\""}
pyzmq = ">=17"
Send2Trash = "*"
terminado = ">=0.8.3"
tornado = ">=6.1.0"
traitlets = ">=5.1"
websocket-client = "*"

[package.extras]
test = ["coverage", "ipykernel", "pre-commit", "pytest-console-scripts", "pytest-cov", "pytest-mock", "pytest-timeout", "pytest-tornasync", "pytest (>=7.0)", "requests"]

[[package]]
name = "jupyterlab"
version = "3.5.0"
description = "JupyterLab computational environment"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ipython = "*"
jinja2 = ">=2.1"
jupyter-core = "*"
jupyter-server = ">=1.16.0,<3"
jupyterlab-server = ">=2.10,<3.0"
nbclassic = "*"
notebook = "<7"
packaging = "*"
tomli = "*"
tornado = ">=6.1.0"

[package.extras]
test = ["check-manifest", "coverage", "jupyterlab-server", "pre-commit", "pytest (>=6.0)", "pytest-cov", "pytest-console-scripts", "pytest-check-links (>=0.5)", "requests", "requests-cache", "virtualenv"]
ui-tests = ["build"]

[[package]]
name = "jupyterlab-pygments"
version = "0.2.2"
description = "Pygments theme using JupyterLab CSS variables"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "jupyterlab-server"
version = "2.16.3"
description = "A set of server components for JupyterLab and JupyterLab like applications."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
babel = "*"
importlib-metadata = {version = ">=4.8.3", markers = "python_version < \"3.10\""}
jinja2 = ">=3.0.3"
json5 = "*"
jsonschema = ">=3.0.1"
jupyter-server = ">=1.8,<3"
packaging = "*"
requests = "*"

[package.extras]
docs = ["autodoc-traits", "docutils (<0.19)", "jinja2 (<3.1.0)", "mistune (<1)", "myst-parser", "pydata-sphinx-theme", "sphinx", "sphinx-copybutton", "sphinxcontrib-openapi"]
openapi = ["openapi-core (>=0.14.2)", "ruamel-yaml"]
test = ["codecov", "ipykernel", "jupyter-server", "openapi-core (>=0.14.2,<0.15.0)", "openapi-spec-validator (<0.5)", "pytest-console-scripts", "pytest-cov", "pytest (>=7.0)", "requests-mock", "ruamel-yaml", "strict-rfc3339"]

[[package]]
name = "jupyterlab-widgets"
version = "3.0.3"
description = "Jupyter interactive widgets for JupyterLab"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "kiwisolver"
version = "1.4.4"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "korean-lunar-calendar"
version = "0.3.1"
description = "Korean Lunar Calendar"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "lightautoml"
version = "0.3.3"
description = "Fast and customizable framework for automatic ML model creation (AutoML)"
category = "main"
optional = false
python-versions = ">=3.6.1,<3.10"

[package.dependencies]
autowoe = ">=1.2"
catboost = "*"
cmaes = "*"
dataclasses = "0.6"
holidays = "*"
jinja2 = "*"
joblib = "*"
json2html = "*"
lightgbm = ">=2.3,<3.0"
networkx = "*"
numpy = {version = ">=1.20.0", markers = "python_version >= \"3.7\""}
optuna = "*"
pandas = ">=1"
poetry-core = ">=1.0.0,<2.0.0"
pyyaml = "*"
scikit-learn = ">=0.22"
scipy = "*"
seaborn = "*"
torch = "<1.9"
torchvision = "*"
tqdm = "*"

[package.extras]
report = ["cffi (>=1.14.5,<2.0.0)", "weasyprint (>=52.5,<53.0)"]
all = ["cffi (>=1.14.5,<2.0.0)", "weasyprint (>=52.5,<53.0)", "torchvision (==0.8.0)", "scikit-image", "pywavelets", "opencv-python (==4.5.2.52)", "efficientnet-pytorch", "albumentations (>=0.4.6)", "transformers (>=4)", "nltk", "gensim (>=4)"]
cv = ["torchvision (==0.8.0)", "scikit-image", "pywavelets", "opencv-python (==4.5.2.52)", "efficientnet-pytorch", "albumentations (>=0.4.6)"]
nlp = ["transformers (>=4)", "nltk", "gensim (>=4)"]

[[package]]
name = "lightfm"
version = "1.16"
description = "LightFM recommendation model"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
requests = "*"
scikit-learn = "*"
scipy = ">=0.17.0"

[[package]]
name = "lightgbm"
version = "2.3.1"
description = "LightGBM Python Package"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
scikit-learn = "*"
scipy = "*"

[[package]]
name = "llvmlite"
version = "0.39.1"
description = "lightweight wrapper around basic LLVM functionality"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mako"
version = "1.2.4"
description = "A super-fast templating language that borrows the best ideas from the existing templating languages."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=0.9.2"

[package.extras]
babel = ["babel"]
lingua = ["lingua"]
testing = ["pytest"]

[[package]]
name = "markupsafe"
version = "2.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "matplotlib"
version = "3.6.2"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
contourpy = ">=1.0.1"
cycler = ">=0.10"
fonttools = ">=4.22.0"
kiwisolver = ">=1.0.1"
numpy = ">=1.19"
packaging = ">=20.0"
pillow = ">=6.2.0"
pyparsing = ">=2.2.1"
python-dateutil = ">=2.7"
setuptools_scm = ">=7"

[[package]]
name = "matplotlib-inline"
version = "0.1.6"
description = "Inline Matplotlib backend for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
traitlets = "*"

[[package]]
name = "mistune"
version = "2.0.4"
description = "A sane Markdown parser with useful plugins and renderers"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "nbclassic"
version = "0.4.8"
description = "A web-based notebook environment for interactive computing"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
argon2-cffi = "*"
ipykernel = "*"
ipython-genutils = "*"
jinja2 = "*"
jupyter-client = ">=6.1.1"
jupyter-core = ">=4.6.1"
jupyter-server = ">=1.8"
nbconvert = ">=5"
nbformat = "*"
nest-asyncio = ">=1.5"
notebook-shim = ">=0.1.0"
prometheus-client = "*"
pyzmq = ">=17"
Send2Trash = ">=1.8.0"
terminado = ">=0.8.3"
tornado = ">=6.1"
traitlets = ">=4.2.1"

[package.extras]
docs = ["sphinx", "nbsphinx", "sphinxcontrib-github-alt", "sphinx-rtd-theme", "myst-parser"]
json-logging = ["json-logging"]
test = ["pytest", "coverage", "requests", "testpath", "nbval", "pytest-playwright", "pytest-cov", "pytest-tornasync", "requests-unixsocket"]

[[package]]
name = "nbclient"
version = "0.7.1"
description = "A client library for executing notebooks. Formerly nbconvert's ExecutePreprocessor."
category = "dev"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
jupyter-client = ">=6.1.12"
nbformat = ">=5.1"
traitlets = ">=5.3"

[package.extras]
dev = ["pre-commit"]
docs = ["autodoc-traits", "mock", "moto", "myst-parser", "nbclient", "sphinx-book-theme", "sphinx (>=1.7)"]
test = ["ipykernel", "ipython", "ipywidgets", "nbconvert (>=7.0.0)", "pytest-asyncio", "pytest-cov (>=4.0)", "pytest (>=7.0)", "testpath", "xmltodict"]

[[package]]
name = "nbconvert"
version = "7.2.5"
description = "Converting Jupyter Notebooks"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
beautifulsoup4 = "*"
bleach = "*"
defusedxml = "*"
importlib-metadata = {version = ">=3.6", markers = "python_version < \"3.10\""}
jinja2 = ">=3.0"
jupyter-core = ">=4.7"
jupyterlab-pygments = "*"
markupsafe = ">=2.0"
mistune = ">=2.0.3,<3"
nbclient = ">=0.5.0"
nbformat = ">=5.1"
packaging = "*"
pandocfilters = ">=1.4.1"
pygments = ">=2.4.1"
tinycss2 = "*"
traitlets = ">=5.0"

[package.extras]
all = ["ipykernel", "ipython", "ipywidgets (>=7)", "myst-parser", "nbsphinx (>=0.2.12)", "pre-commit", "pyppeteer (>=1,<1.1)", "pyqtwebengine (>=5.15)", "pytest", "pytest-cov", "pytest-dependency", "sphinx-rtd-theme", "sphinx (==5.0.2)", "tornado (>=6.1)"]
docs = ["ipython", "myst-parser", "nbsphinx (>=0.2.12)", "sphinx-rtd-theme", "sphinx (==5.0.2)"]
qtpdf = ["pyqtwebengine (>=5.15)"]
qtpng = ["pyqtwebengine (>=5.15)"]
serve = ["tornado (>=6.1)"]
test = ["ipykernel", "ipywidgets (>=7)", "pre-commit", "pyppeteer (>=1,<1.1)", "pytest", "pytest-cov", "pytest-dependency"]
webpdf = ["pyppeteer (>=1,<1.1)"]

[[package]]
name = "nbformat"
version = "5.7.0"
description = "The Jupyter Notebook format"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
fastjsonschema = "*"
jsonschema = ">=2.6"
jupyter-core = "*"
traitlets = ">=5.1"

[package.extras]
test = ["check-manifest", "pep440", "pre-commit", "pytest", "testpath"]

[[package]]
name = "nest-asyncio"
version = "1.5.6"
description = "Patch asyncio to allow nested event loops"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "networkx"
version = "2.8.8"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
default = ["numpy (>=1.19)", "scipy (>=1.8)", "matplotlib (>=3.4)", "pandas (>=1.3)"]
developer = ["pre-commit (>=2.20)", "mypy (>=0.982)"]
doc = ["sphinx (>=5.2)", "pydata-sphinx-theme (>=0.11)", "sphinx-gallery (>=0.11)", "numpydoc (>=1.5)", "pillow (>=9.2)", "nb2plots (>=0.6)", "texext (>=0.6.6)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.9)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.2)", "pytest-cov (>=4.0)", "codecov (>=2.1)"]

[[package]]
name = "notebook"
version = "6.5.2"
description = "A web-based notebook environment for interactive computing"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
argon2-cffi = "*"
ipykernel = "*"
ipython-genutils = "*"
jinja2 = "*"
jupyter-client = ">=5.3.4"
jupyter-core = ">=4.6.1"
nbclassic = ">=0.4.7"
nbconvert = ">=5"
nbformat = "*"
nest-asyncio = ">=1.5"
prometheus-client = "*"
pyzmq = ">=17"
Send2Trash = ">=1.8.0"
terminado = ">=0.8.3"
tornado = ">=6.1"
traitlets = ">=4.2.1"

[package.extras]
docs = ["sphinx", "nbsphinx", "sphinxcontrib-github-alt", "sphinx-rtd-theme", "myst-parser"]
json-logging = ["json-logging"]
test = ["pytest", "coverage", "requests", "testpath", "nbval", "selenium (==4.1.5)", "pytest-cov", "requests-unixsocket"]

[[package]]
name = "notebook-shim"
version = "0.2.2"
description = "A shim layer for notebook traits and config"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
jupyter-server = ">=1.8,<3"

[package.extras]
test = ["pytest", "pytest-console-scripts", "pytest-tornasync"]

[[package]]
name = "numba"
version = "0.56.4"
description = "compiling Python code using LLVM"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.9\""}
llvmlite = ">=0.39.0dev0,<0.40"
numpy = ">=1.18,<1.24"

[[package]]
name = "numpy"
version = "1.23.5"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "optuna"
version = "2.10.1"
description = "A hyperparameter optimization framework"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
alembic = "*"
cliff = "*"
cmaes = ">=0.8.2"
colorlog = "*"
numpy = "*"
packaging = ">=20.0"
PyYAML = "*"
scipy = "!=1.4.0"
sqlalchemy = ">=1.1.0"
tqdm = "*"

[package.extras]
benchmark = ["asv", "virtualenv"]
checking = ["black", "hacking", "isort", "mypy (==0.790)", "blackdoc"]
codecov = ["codecov", "pytest-cov"]
doctest = ["cma", "matplotlib (>=3.0.0)", "pandas", "plotly (>=4.0.0)", "scikit-learn (>=0.24.2,<1.0.0)", "scikit-optimize", "mlflow"]
document = ["Jinja2 (<3.0.0)", "MarkupSafe (<=2.0.1)", "sphinx (<=3.5.4)", "sphinx-rtd-theme (<=1.0.0)", "sphinx-copybutton (<=0.4.0)", "sphinx-gallery (<=0.10.0)", "sphinx-plotly-directive (<=0.1.3)", "pillow", "matplotlib", "scikit-learn (<1.0.0)", "plotly (>=4.0.0)", "pandas", "lightgbm", "torch (==1.8.0)", "torchvision (==0.9.0)", "torchaudio (==0.8.0)", "thop"]
experimental = ["redis"]
integration = ["chainer (>=5.0.0)", "cma", "lightgbm", "mlflow", "wandb", "mpi4py", "mxnet", "pandas", "scikit-learn (>=0.24.2,<1.0.0)", "scikit-optimize", "xgboost", "tensorflow", "tensorflow-datasets", "pytorch-ignite", "pytorch-lightning (>=1.0.2)", "skorch", "catalyst (>=21.3)", "torchaudio (==0.8.0)", "allennlp (>=2.2.0,<2.7.0)", "fastai", "botorch (>=0.4.0)", "torch (==1.8.0+cpu)", "torchvision (==0.9.0+cpu)", "torch (==1.8.0)", "torchvision (==0.9.0)"]
optional = ["bokeh (<2.0.0)", "matplotlib (>=3.0.0)", "pandas", "plotly (>=4.0.0)", "redis", "scikit-learn (>=0.24.2,<1.0.0)"]
testing = ["bokeh (<2.0.0)", "chainer (>=5.0.0)", "cma", "fakeredis", "lightgbm", "matplotlib (>=3.0.0)", "mlflow", "mpi4py", "mxnet", "pandas", "plotly (>=4.0.0)", "pytest", "scikit-learn (>=0.24.2,<1.0.0)", "scikit-optimize", "xgboost", "tensorflow", "tensorflow-datasets", "pytorch-ignite", "pytorch-lightning (>=1.0.2)", "skorch", "catalyst (>=21.3)", "torchaudio (==0.8.0)", "allennlp (>=2.2.0,<2.7.0)", "fastai", "botorch (>=0.4.0)", "torch (==1.8.0+cpu)", "torchvision (==0.9.0+cpu)", "torch (==1.8.0)", "torchvision (==0.9.0)"]
tests = ["fakeredis", "pytest"]

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pandas"
version = "1.5.2"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = {version = ">=1.20.3", markers = "python_version < \"3.10\""}
python-dateutil = ">=2.8.1"
pytz = ">=2020.1"

[package.extras]
test = ["hypothesis (>=5.5.3)", "pytest (>=6.0)", "pytest-xdist (>=1.31)"]

[[package]]
name = "pandocfilters"
version = "1.5.0"
description = "Utilities for writing pandoc filters in python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "parso"
version = "0.8.3"
description = "A Python Parser"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["docopt", "pytest (<6.0.0)"]

[[package]]
name = "pbr"
version = "5.11.0"
description = "Python Build Reasonableness"
category = "main"
optional = false
python-versions = ">=2.6"

[[package]]
name = "pexpect"
version = "4.8.0"
description = "Pexpect allows easy control of interactive console applications."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "pickleshare"
version = "0.7.5"
description = "Tiny 'shelve'-like database with concurrency support"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pillow"
version = "9.3.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-issues (>=3.0.1)", "sphinx-removed-in", "sphinxext-opengraph"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "pkgutil-resolve-name"
version = "1.3.10"
description = "Resolve a name to an object."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "platformdirs"
version = "2.5.4"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2022.9.29)", "proselint (>=0.13)", "sphinx-autodoc-typehints (>=1.19.4)", "sphinx (>=5.3)"]
test = ["appdirs (==1.4.4)", "pytest-cov (>=4)", "pytest-mock (>=3.10)", "pytest (>=7.2)"]

[[package]]
name = "plotly"
version = "5.11.0"
description = "An open-source, interactive data visualization library for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
tenacity = ">=6.2.0"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest-benchmark", "pytest"]
dev = ["tox", "pre-commit"]

[[package]]
name = "poetry-core"
version = "1.4.0"
description = "Poetry PEP 517 Build Backend"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[[package]]
name = "prettytable"
version = "3.5.0"
description = "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
wcwidth = "*"

[package.extras]
tests = ["pytest", "pytest-cov", "pytest-lazy-fixture"]

[[package]]
name = "prometheus-client"
version = "0.15.0"
description = "Python client for the Prometheus monitoring system."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
twisted = ["twisted"]

[[package]]
name = "prompt-toolkit"
version = "3.0.33"
description = "Library for building powerful interactive command lines in Python"
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
wcwidth = "*"

[[package]]
name = "psutil"
version = "5.9.4"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["ipaddress", "mock", "enum34", "pywin32", "wmi"]

[[package]]
name = "ptyprocess"
version = "0.7.0"
description = "Run a subprocess in a pseudo terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pure-eval"
version = "0.2.2"
description = "Safely evaluate AST nodes without side effects"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
tests = ["pytest"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "py4j"
version = "0.10.9"
description = "Enables Python programs to dynamically access arbitrary Java objects"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyarrow"
version = "10.0.1"
description = "Python library for Apache Arrow"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.16.6"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pygments"
version = "2.13.0"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
plugins = ["importlib-metadata"]

[[package]]
name = "pymeeus"
version = "0.5.11"
description = "Python implementation of Jean Meeus astronomical routines"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pyperclip"
version = "1.8.2"
description = "A cross-platform clipboard module for Python. (Only handles plain text for now.)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyreadline3"
version = "3.4.1"
description = "A python implementation of GNU readline."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyrsistent"
version = "0.19.2"
description = "Persistent/Functional/Immutable data structures"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pyspark"
version = "3.1.3"
description = "Apache Spark Python API"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
py4j = "0.10.9"

[package.extras]
ml = ["numpy (>=1.7)"]
mllib = ["numpy (>=1.7)"]
sql = ["pandas (>=0.23.2)", "pyarrow (>=1.0.0)"]

[[package]]
name = "pytest"
version = "7.2.0"
description = "pytest: simple powerful testing with Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
exceptiongroup = {version = ">=1.0.0rc8", markers = "python_version < \"3.11\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
tomli = {version = ">=1.0.0", markers = "python_version < \"3.11\""}

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "xmlschema"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytorch-ignite"
version = "0.4.10"
description = "A lightweight library to help with training neural networks in PyTorch."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
packaging = "*"
torch = ">=1.3,<2"

[[package]]
name = "pyts"
version = "0.12.0"
description = "A python package for time series classification"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
joblib = ">=0.12"
numba = ">=0.48.0"
numpy = ">=1.17.5"
scikit-learn = ">=0.22.1"
scipy = ">=1.3.0"

[package.extras]
tests = ["pytest-cov", "pytest"]
docs = ["matplotlib", "numpydoc", "sphinx-gallery", "sphinx (==1.8.5)", "docutils (==0.14)"]

[[package]]
name = "pytz"
version = "2022.6"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywin32"
version = "305"
description = "Python for Window Extensions"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pywinpty"
version = "2.0.9"
description = "Pseudo terminal support for Windows from Python."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pyyaml"
version = "5.4.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[[package]]
name = "pyzmq"
version = "24.0.1"
description = "Python bindings for 0MQ"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = {version = "*", markers = "implementation_name == \"pypy\""}
py = {version = "*", markers = "implementation_name == \"pypy\""}

[[package]]
name = "qtconsole"
version = "5.4.0"
description = "Jupyter Qt console"
category = "dev"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
ipykernel = ">=4.1"
ipython-genutils = "*"
jupyter-client = ">=4.1"
jupyter-core = "*"
pygments = "*"
pyzmq = ">=17.1"
qtpy = ">=2.0.1"
traitlets = "<5.2.1 || >5.2.1,<5.2.2 || >5.2.2"

[package.extras]
doc = ["Sphinx (>=1.3)"]
test = ["flaky", "pytest", "pytest-qt"]

[[package]]
name = "qtpy"
version = "2.3.0"
description = "Provides an abstraction layer on top of the various Qt bindings (PyQt5/6 and PySide2/6)."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = "*"

[package.extras]
test = ["pytest (>=6,!=7.0.0,!=7.0.1)", "pytest-cov (>=3.0.0)", "pytest-qt"]

[[package]]
name = "rdt"
version = "0.6.3"
description = "Reversible Data Transforms"
category = "main"
optional = false
python-versions = ">=3.6,<3.10"

[package.dependencies]
numpy = {version = ">=1.20.0,<2", markers = "python_version >= \"3.7\""}
pandas = ">=1.1.3,<2"
psutil = ">=5.7,<6"
pyyaml = ">=5.4.1,<6"
scikit-learn = ">=0.24,<2"
scipy = ">=1.5.4,<2"

[package.extras]
copulas = ["copulas (>=0.6.0,<0.7)"]
dev = ["bumpversion (>=0.5.3,<0.6)", "pip (>=9.0.1)", "watchdog (>=0.8.3,<0.11)", "pycodestyle (>=2.7.0,<2.8.0)", "pyflakes (>=2.3.0,<2.4.0)", "flake8 (>=3.7.7,<4)", "flake8-absolute-import (>=1.0,<2)", "flake8-builtins (>=1.5.3,<1.6)", "flake8-comprehensions (>=3.6.1,<3.7)", "flake8-debugger (>=4.0.0,<4.1)", "flake8-docstrings (>=1.5.0,<2)", "flake8-mock (>=0.3,<0.4)", "flake8-variables-names (>=0.0.4,<0.1)", "dlint (>=0.11.0,<0.12)", "flake8-fixme (>=1.1.1,<1.2)", "flake8-eradicate (>=1.1.0,<1.2)", "flake8-mutable (>=1.2.0,<1.3)", "flake8-print (>=4.0.0,<4.1)", "isort (>=4.3.4,<5)", "pylint (>=2.5.3,<3)", "pandas-vet (>=0.2.2,<0.3)", "flake8-multiline-containers (>=0.0.18,<0.1)", "flake8-pytest-style (>=1.5.0,<2)", "flake8-quotes (>=3.3.0,<4)", "flake8-expression-complexity (>=0.0.9,<0.1)", "pep8-naming (>=0.12.1,<0.13)", "pydocstyle (>=6.1.1,<6.2)", "flake8-sfs (>=0.0.3,<0.1)", "autoflake (>=1.1,<2)", "autopep8 (>=1.4.3,<1.6)", "twine (>=1.10.0,<4)", "wheel (>=0.30.0)", "coverage (>=4.5.1,<6)", "tox (>=2.9.1,<4)", "tabulate (>=0.8.9,<1)", "invoke", "pytest (>=3.4.2)", "pytest-cov (>=2.6.0)", "jupyter (>=1.0.0,<2)", "rundoc (>=0.4.3,<0.5)", "pytest-subtests (>=0.5,<1.0)", "copulas (>=0.6.0,<0.7)"]
test = ["pytest (>=3.4.2)", "pytest-cov (>=2.6.0)", "jupyter (>=1.0.0,<2)", "rundoc (>=0.4.3,<0.5)", "pytest-subtests (>=0.5,<1.0)", "copulas (>=0.6.0,<0.7)"]

[[package]]
name = "replay-rec"
version = "0.10.0"
description = "RecSys Library"
category = "main"
optional = false
python-versions = ">=3.7,<3.10"

[package.dependencies]
implicit = ">=0.5"
lightautoml = ">=0.3.1,<0.3.7"
lightfm = "*"
llvmlite = ">=0.32.1"
numba = ">=0.50"
numpy = ">=1.20.0"
optuna = "*"
pandas = "*"
psutil = "*"
pyarrow = "*"
pyspark = ">=3.0,<3.2"
pytorch-ignite = "*"
scikit-learn = "*"
scipy = "*"
seaborn = "*"
torch = "*"

[[package]]
name = "requests"
version = "2.28.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<3"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "scikit-learn"
version = "1.1.3"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
joblib = ">=1.0.0"
numpy = ">=1.17.3"
scipy = ">=1.3.2"
threadpoolctl = ">=2.0.0"

[package.extras]
benchmark = ["matplotlib (>=3.1.2)", "pandas (>=1.0.5)", "memory-profiler (>=0.57.0)"]
docs = ["matplotlib (>=3.1.2)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)", "memory-profiler (>=0.57.0)", "sphinx (>=4.0.1)", "sphinx-gallery (>=0.7.0)", "numpydoc (>=1.2.0)", "Pillow (>=7.1.2)", "sphinx-prompt (>=1.3.0)", "sphinxext-opengraph (>=0.4.2)"]
examples = ["matplotlib (>=3.1.2)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)"]
tests = ["matplotlib (>=3.1.2)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "pytest (>=5.0.1)", "pytest-cov (>=2.9.0)", "flake8 (>=3.8.2)", "black (>=22.3.0)", "mypy (>=0.961)", "pyamg (>=4.0.0)", "numpydoc (>=1.2.0)"]

[[package]]
name = "scipy"
version = "1.9.3"
description = "Fundamental algorithms for scientific computing in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.18.5,<1.26.0"

[package.extras]
test = ["pytest", "pytest-cov", "pytest-xdist", "asv", "mpmath", "gmpy2", "threadpoolctl", "scikit-umfpack"]
doc = ["sphinx (!=4.1.0)", "pydata-sphinx-theme (==0.9.0)", "sphinx-panels (>=0.5.2)", "matplotlib (>2)", "numpydoc", "sphinx-tabs"]
dev = ["mypy", "typing-extensions", "pycodestyle", "flake8"]

[[package]]
name = "sdmetrics"
version = "0.5.0"
description = "Metrics for Synthetic Data Generation Projects"
category = "main"
optional = false
python-versions = ">=3.6,<3.10"

[package.dependencies]
copulas = ">=0.7.0,<0.8"
numpy = {version = ">=1.20.0,<2", markers = "python_version >= \"3.7\""}
pandas = ">=1.1.3,<2"
pyts = ">=0.12.0,<0.13.0"
rdt = ">=0.6.1,<0.7"
scikit-learn = ">=0.24,<2"
scipy = ">=1.5.4,<2"
torch = ">=1.8.0,<2"

[package.extras]
test = ["pomegranate (>=0.14.1,<0.14.7)", "pomegranate (>=0.13.4,<0.14.2)", "invoke", "rundoc (>=0.4.3,<0.5)", "jupyter (>=1.0.0,<2)", "pytest-rerunfailures (>=10)", "pytest-cov (>=2.6.0)", "pytest (>=3.4.2)"]
pomegranate = ["pomegranate (>=0.14.1,<0.14.7)", "pomegranate (>=0.13.4,<0.14.2)"]
dev = ["pomegranate (>=0.14.1,<0.14.7)", "pomegranate (>=0.13.4,<0.14.2)", "invoke", "rundoc (>=0.4.3,<0.5)", "jupyter (>=1.0.0,<2)", "pytest-rerunfailures (>=10)", "pytest-cov (>=2.6.0)", "pytest (>=3.4.2)", "tox (>=2.9.1,<4)", "coverage (>=4.5.1,<6)", "wheel (>=0.30.0)", "twine (>=1.10.0,<4)", "packaging (>=20,<21)", "autopep8 (>=1.4.3,<1.6)", "autoflake (>=1.1,<2)", "flake8-quotes (>=3.3.0,<4)", "flake8-multiline-containers (>=0.0.18,<0.1)", "flake8-expression-complexity (>=0.0.9,<0.1)", "flake8-print (>=4.0.0,<4.1)", "flake8-mutable (>=1.2.0,<1.3)", "flake8-eradicate (>=1.1.0,<1.2)", "flake8-fixme (>=1.1.1,<1.2)", "flake8-mock (>=0.3,<0.4)", "flake8-debugger (>=4.0.0,<4.1)", "flake8-comprehensions (>=3.6.1,<3.7)", "flake8-builtins (>=1.5.3,<1.6)", "flake8-pytest-style (>=1.5.0,<2)", "pep8-naming (>=0.12.1,<0.13)", "pandas-vet (>=0.2.2,<0.3)", "dlint (>=0.11.0,<0.12)", "flake8-docstrings (>=1.5.0,<2)", "flake8-sfs (>=0.0.3,<0.1)", "pydocstyle (>=6.1.1,<6.2)", "flake8-variables-names (>=0.0.4,<0.1)", "isort (>=4.3.4,<5)", "flake8-absolute-import (>=1.0,<2)", "flake8 (>=3.7.7,<4)", "watchdog (>=0.8.3,<0.11)", "pip (>=9.0.1)", "bumpversion (>=0.5.3,<0.6)"]

[[package]]
name = "sdv"
version = "0.15.0"
description = "Synthetic Data Generation for tabular, relational and time series data."
category = "main"
optional = false
python-versions = ">=3.6,<3.10"

[package.dependencies]
copulas = ">=0.7.0,<0.8"
ctgan = ">=0.5.1,<0.6"
deepecho = ">=0.3.0.post1,<0.4"
Faker = ">=3.0.0,<10"
graphviz = ">=0.13.2,<1"
numpy = {version = ">=1.20.0,<2", markers = "python_version >= \"3.7\""}
pandas = ">=1.1.3,<2"
rdt = ">=0.6.2,<0.7"
sdmetrics = ">=0.5.0,<0.6"
tqdm = ">=4.15,<5"

[package.extras]
dev = ["bumpversion (>=0.5.3,<0.6)", "pip (>=9.0.1)", "watchdog (>=0.8.3,<0.9)", "docutils (>=0.12,<0.18)", "m2r2 (>=0.2.5,<0.3)", "nbsphinx (>=0.5.0,<0.7)", "Sphinx (>=3,<3.3)", "pydata-sphinx-theme (<0.5)", "markupsafe (<2.1.0)", "Jinja2 (>=2,<3)", "flake8 (>=3.7.7,<4)", "flake8-absolute-import (>=1.0,<2)", "flake8-docstrings (>=1.5.0,<2)", "flake8-sfs (>=0.0.3,<0.1)", "isort (>=4.3.4,<5)", "autoflake (>=1.1,<2)", "autopep8 (>=1.4.3,<1.6)", "twine (>=1.10.0,<4)", "wheel (>=0.30.0)", "coverage (>=4.5.1,<6)", "tox (>=2.9.1,<4)", "invoke", "pytest (>=3.4.2)", "pytest-cov (>=2.6.0)", "pytest-rerunfailures (>10)", "jupyter (>=1.0.0,<2)", "rundoc (>=0.4.3,<0.5)"]
pomegranate = ["pomegranate (>=0.13.4,<0.14.2)", "pomegranate (>=0.14.1,<0.15)"]
test = ["pytest (>=3.4.2)", "pytest-cov (>=2.6.0)", "pytest-rerunfailures (>10)", "jupyter (>=1.0.0,<2)", "rundoc (>=0.4.3,<0.5)"]

[[package]]
name = "seaborn"
version = "0.12.1"
description = "Statistical data visualization"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
matplotlib = ">=3.1,<3.6.1 || >3.6.1"
numpy = ">=1.17"
pandas = ">=0.25"

[package.extras]
dev = ["pytest", "pytest-cov", "pytest-xdist", "flake8", "mypy", "pandas-stubs", "pre-commit"]
docs = ["numpydoc", "nbconvert", "ipykernel", "sphinx-copybutton", "sphinx-issues", "sphinx-design", "pyyaml", "pydata_sphinx_theme (==0.10.0rc2)"]
stats = ["scipy (>=1.3)", "statsmodels (>=0.10)"]

[[package]]
name = "send2trash"
version = "1.8.0"
description = "Send file to trash natively under Mac OS X, Windows and Linux."
category = "dev"
optional = false
python-versions = "*"

[package.extras]
win32 = ["pywin32"]
objc = ["pyobjc-framework-cocoa"]
nativelib = ["pywin32", "pyobjc-framework-cocoa"]

[[package]]
name = "setuptools-scm"
version = "7.0.5"
description = "the blessed package to manage your versions by scm tags"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=20.0"
tomli = ">=1.0.0"
typing-extensions = "*"

[package.extras]
test = ["pytest (>=6.2)", "virtualenv (>20)"]
toml = ["setuptools (>=42)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "sniffio"
version = "1.3.0"
description = "Sniff out which async library your code is running under"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "snowballstemmer"
version = "2.2.0"
description = "This package provides 29 stemmers for 28 languages generated from Snowball algorithms."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "soupsieve"
version = "2.3.2.post1"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "sphinx"
version = "5.3.0"
description = "Python documentation generator"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
alabaster = ">=0.7,<0.8"
babel = ">=2.9"
colorama = {version = ">=0.4.5", markers = "sys_platform == \"win32\""}
docutils = ">=0.14,<0.20"
imagesize = ">=1.3"
importlib-metadata = {version = ">=4.8", markers = "python_version < \"3.10\""}
Jinja2 = ">=3.0"
packaging = ">=21.0"
Pygments = ">=2.12"
requests = ">=2.5.0"
snowballstemmer = ">=2.0"
sphinxcontrib-applehelp = "*"
sphinxcontrib-devhelp = "*"
sphinxcontrib-htmlhelp = ">=2.0.0"
sphinxcontrib-jsmath = "*"
sphinxcontrib-qthelp = "*"
sphinxcontrib-serializinghtml = ">=1.1.5"

[package.extras]
docs = ["sphinxcontrib-websupport"]
lint = ["flake8 (>=3.5.0)", "flake8-comprehensions", "flake8-bugbear", "flake8-simplify", "isort", "mypy (>=0.981)", "sphinx-lint", "docutils-stubs", "types-typed-ast", "types-requests"]
test = ["pytest (>=4.6)", "html5lib", "typed-ast", "cython"]

[[package]]
name = "sphinx-autodoc-typehints"
version = "1.19.5"
description = "Type hints (PEP 484) support for the Sphinx autodoc extension"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
sphinx = ">=5.3"

[package.extras]
docs = ["furo (>=2022.9.29)", "sphinx-autodoc-typehints (>=1.19.4)", "sphinx (>=5.3)"]
testing = ["covdefaults (>=2.2)", "coverage (>=6.5)", "diff-cover (>=7.0.1)", "nptyping (>=2.3.1)", "pytest-cov (>=4)", "pytest (>=7.2)", "sphobjinv (>=2.2.2)", "typing-extensions (>=4.4)"]
type-comment = ["typed-ast (>=1.5.4)"]

[[package]]
name = "sphinx-rtd-theme"
version = "1.1.1"
description = "Read the Docs theme for Sphinx"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
docutils = "<0.18"
sphinx = ">=1.6,<6"

[package.extras]
dev = ["transifex-client", "sphinxcontrib-httpdomain", "bump2version", "wheel"]

[[package]]
name = "sphinxcontrib-applehelp"
version = "1.0.2"
description = "sphinxcontrib-applehelp is a sphinx extension which outputs Apple help books"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["pytest"]
lint = ["docutils-stubs", "mypy", "flake8"]

[[package]]
name = "sphinxcontrib-devhelp"
version = "1.0.2"
description = "sphinxcontrib-devhelp is a sphinx extension which outputs Devhelp document."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["pytest"]
lint = ["docutils-stubs", "mypy", "flake8"]

[[package]]
name = "sphinxcontrib-htmlhelp"
version = "2.0.0"
description = "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
test = ["html5lib", "pytest"]
lint = ["docutils-stubs", "mypy", "flake8"]

[[package]]
name = "sphinxcontrib-jsmath"
version = "1.0.1"
description = "A sphinx extension which renders display math in HTML via JavaScript"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["mypy", "flake8", "pytest"]

[[package]]
name = "sphinxcontrib-qthelp"
version = "1.0.3"
description = "sphinxcontrib-qthelp is a sphinx extension which outputs QtHelp document."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["pytest"]
lint = ["docutils-stubs", "mypy", "flake8"]

[[package]]
name = "sphinxcontrib-serializinghtml"
version = "1.1.5"
description = "sphinxcontrib-serializinghtml is a sphinx extension which outputs \"serialized\" HTML files (json and pickle)."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
name = "sqlalchemy"
version = "1.4.44"
description = "Database Abstraction Library"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
greenlet = {version = "!=0.4.17", markers = "python_version >= \"3\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}

[package.extras]
aiomysql = ["greenlet (!=0.4.17)", "aiomysql"]
aiosqlite = ["typing_extensions (!=3.10.0.1)", "greenlet (!=0.4.17)", "aiosqlite"]
asyncio = ["greenlet (!=0.4.17)"]
asyncmy = ["greenlet (!=0.4.17)", "asyncmy (>=0.2.3,!=0.2.4)"]
mariadb_connector = ["mariadb (>=1.0.1,!=1.1.2)"]
mssql = ["pyodbc"]
mssql_pymssql = ["pymssql"]
mssql_pyodbc = ["pyodbc"]
mypy = ["sqlalchemy2-stubs", "mypy (>=0.910)"]
mysql = ["mysqlclient (>=1.4.0,<2)", "mysqlclient (>=1.4.0)"]
mysql_connector = ["mysql-connector-python"]
oracle = ["cx_oracle (>=7,<8)", "cx_oracle (>=7)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql_asyncpg = ["greenlet (!=0.4.17)", "asyncpg"]
postgresql_pg8000 = ["pg8000 (>=1.16.6,!=1.29.0)"]
postgresql_psycopg2binary = ["psycopg2-binary"]
postgresql_psycopg2cffi = ["psycopg2cffi"]
pymysql = ["pymysql (<1)", "pymysql"]
sqlcipher = ["sqlcipher3-binary"]

[[package]]
name = "stack-data"
version = "0.6.2"
description = "Extract data from python stack frames and tracebacks for informative displays"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
asttokens = ">=2.1.0"
executing = ">=1.2.0"
pure-eval = "*"

[package.extras]
tests = ["pytest", "typeguard", "pygments", "littleutils", "cython"]

[[package]]
name = "stevedore"
version = "4.1.1"
description = "Manage dynamic plugins for Python applications"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pbr = ">=2.0.0,<2.1.0 || >2.1.0"

[[package]]
name = "strenum"
version = "0.4.8"
description = "An Enum that inherits from str."
category = "main"
optional = false
python-versions = "*"

[package.extras]
docs = ["sphinx", "sphinx-rtd-theme", "myst-parser"]
release = ["twine"]
test = ["pytest", "pytest-black", "pytest-cov", "pytest-pylint", "pylint"]

[[package]]
name = "tenacity"
version = "8.1.0"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
doc = ["reno", "sphinx", "tornado (>=4.5)"]

[[package]]
name = "terminado"
version = "0.17.0"
description = "Tornado websocket backend for the Xterm.js Javascript terminal emulator library."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ptyprocess = {version = "*", markers = "os_name != \"nt\""}
pywinpty = {version = ">=1.1.0", markers = "os_name == \"nt\""}
tornado = ">=6.1.0"

[package.extras]
docs = ["pydata-sphinx-theme", "sphinx"]
test = ["pre-commit", "pytest-timeout", "pytest (>=7.0)"]

[[package]]
name = "text-unidecode"
version = "1.3"
description = "The most basic Text::Unidecode port"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "threadpoolctl"
version = "3.1.0"
description = "threadpoolctl"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "tinycss2"
version = "1.2.1"
description = "A tiny CSS parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
webencodings = ">=0.4"

[package.extras]
test = ["flake8", "isort", "pytest"]
doc = ["sphinx-rtd-theme", "sphinx"]

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "torch"
version = "1.8.1"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
category = "main"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
numpy = "*"
typing-extensions = "*"

[[package]]
name = "torchvision"
version = "0.12.0"
description = "image and video datasets and models for torch deep learning"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
pillow = ">=5.3.0,<8.3.0 || >=8.4.0"
requests = "*"
torch = "*"
typing-extensions = "*"

[package.extras]
scipy = ["scipy"]

[[package]]
name = "tornado"
version = "6.2"
description = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."
category = "dev"
optional = false
python-versions = ">= 3.7"

[[package]]
name = "tqdm"
version = "4.64.1"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["py-make (>=0.1.0)", "twine", "wheel"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "traitlets"
version = "5.6.0"
description = "Traitlets Python configuration system"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx"]
test = ["pre-commit", "pytest"]

[[package]]
name = "typing-extensions"
version = "4.4.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.13"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "wcwidth"
version = "0.2.5"
description = "Measures the displayed width of unicode strings in a terminal"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "webencodings"
version = "0.5.1"
description = "Character encoding aliases for legacy web content"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "websocket-client"
version = "1.4.2"
description = "WebSocket client for Python with low level API options"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["Sphinx (>=3.4)", "sphinx-rtd-theme (>=0.5)"]
optional = ["python-socks", "wsaccel"]
test = ["websockets"]

[[package]]
name = "widgetsnbextension"
version = "4.0.3"
description = "Jupyter interactive widgets for Jupyter Notebook"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "zipp"
version = "3.11.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "jaraco.itertools", "func-timeout", "jaraco.functools", "more-itertools", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "pytest-flake8"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.8, <3.10"
content-hash = "1213f84975cffbaef94dc00cda86dcb22a604acd3d6c18908a8734343e47ecd2"

[metadata.files]
alabaster = []
alembic = []
anyio = []
appnope = []
argon2-cffi = []
argon2-cffi-bindings = []
asttokens = []
attrs = []
autopage = []
autowoe = []
babel = []
backcall = []
beautifulsoup4 = []
bleach = []
catboost = []
certifi = []
cffi = []
charset-normalizer = []
cliff = []
cmaes = []
cmd2 = []
colorama = []
colorlog = []
comm = []
contourpy = []
convertdate = []
copulas = []
ctgan = []
cycler = []
dataclasses = []
debugpy = []
decorator = []
deepecho = []
defusedxml = []
docutils = []
entrypoints = []
exceptiongroup = []
executing = []
faker = []
fastjsonschema = []
fonttools = []
graphviz = []
greenlet = []
hijri-converter = []
holidays = []
idna = []
imagesize = []
implicit = []
importlib-metadata = []
importlib-resources = []
iniconfig = []
ipykernel = []
ipython = []
ipython-genutils = []
ipywidgets = []
jedi = []
jinja2 = []
joblib = []
json2html = []
json5 = []
jsonschema = []
jupyter = []
jupyter-client = []
jupyter-console = []
jupyter-core = []
jupyter-server = []
jupyterlab = []
jupyterlab-pygments = []
jupyterlab-server = []
jupyterlab-widgets = []
kiwisolver = []
korean-lunar-calendar = []
lightautoml = []
lightfm = []
lightgbm = []
llvmlite = []
mako = []
markupsafe = []
matplotlib = []
matplotlib-inline = []
mistune = []
nbclassic = []
nbclient = []
nbconvert = []
nbformat = []
nest-asyncio = []
networkx = []
notebook = []
notebook-shim = []
numba = []
numpy = []
optuna = []
packaging = []
pandas = []
pandocfilters = []
parso = []
pbr = []
pexpect = []
pickleshare = []
pillow = []
pkgutil-resolve-name = []
platformdirs = []
plotly = []
pluggy = []
poetry-core = []
prettytable = []
prometheus-client = []
prompt-toolkit = []
psutil = []
ptyprocess = []
pure-eval = []
py = []
py4j = []
pyarrow = []
pycparser = []
pygments = []
pymeeus = []
pyparsing = []
pyperclip = []
pyreadline3 = []
pyrsistent = []
pyspark = []
pytest = []
python-dateutil = []
pytorch-ignite = []
pyts = []
pytz = []
pywin32 = []
pywinpty = []
pyyaml = []
pyzmq = []
qtconsole = []
qtpy = []
rdt = []
replay-rec = []
requests = []
scikit-learn = []
scipy = []
sdmetrics = []
sdv = []
seaborn = []
send2trash = []
setuptools-scm = []
six = []
sniffio = []
snowballstemmer = []
soupsieve = []
sphinx = []
sphinx-autodoc-typehints = []
sphinx-rtd-theme = []
sphinxcontrib-applehelp = []
sphinxcontrib-devhelp = []
sphinxcontrib-htmlhelp = []
sphinxcontrib-jsmath = []
sphinxcontrib-qthelp = []
sphinxcontrib-serializinghtml = []
sqlalchemy = []
stack-data = []
stevedore = []
strenum = []
tenacity = []
terminado = []
text-unidecode = []
threadpoolctl = []
tinycss2 = []
tomli = []
torch = []
torchvision = []
tornado = []
tqdm = []
traitlets = []
typing-extensions = []
urllib3 = []
wcwidth = []
webencodings = []
websocket-client = []
widgetsnbextension = []
zipp = []
